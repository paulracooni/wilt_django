# Generated by Django 3.0.7 on 2020-07-19 13:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import wilt_backend.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0011_update_proxy_permissions"),
    ]

    operations = [
        migrations.CreateModel(
            name="WiltUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.CharField(
                        db_index=True,
                        max_length=28,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "display_name",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        unique=True,
                        verbose_name="display name",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "picture",
                    models.URLField(blank=True, null=True, verbose_name="picture"),
                ),
                (
                    "company_name",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="company name",
                    ),
                ),
                (
                    "job_title",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("PL", "Planer"),
                            ("DS", "Designer"),
                            ("DV", "Developer"),
                            ("MK", "Marketer"),
                            ("DT", "DataScientist"),
                        ],
                        max_length=2,
                        null=True,
                        verbose_name="job title",
                    ),
                ),
                (
                    "career_year",
                    models.DecimalField(
                        blank=True,
                        decimal_places=0,
                        max_digits=3,
                        null=True,
                        verbose_name="company name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, null=True, verbose_name="user description"
                    ),
                ),
                (
                    "web_link",
                    models.TextField(blank=True, null=True, verbose_name="web link"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "db_table": "wilt_user",
            },
            managers=[("objects", wilt_backend.managers.UserManager()),],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
            ],
            options={
                "verbose_name": "태그",
                "verbose_name_plural": "태그",
                "db_table": "tag",
            },
        ),
        migrations.CreateModel(
            name="Til",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="til id"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("PL", "Plan"),
                            ("DS", "Design"),
                            ("DV", "Develop"),
                            ("MK", "Marketing"),
                            ("DT", "Data"),
                        ],
                        max_length=2,
                        verbose_name="category",
                    ),
                ),
                ("title", models.TextField(verbose_name="title")),
                ("content", models.TextField(verbose_name="content")),
                ("is_public", models.BooleanField(default=True, verbose_name="public")),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="date created",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        related_name="til_tags", to="wilt_backend.Tag"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "til",
                "verbose_name_plural": "tils",
                "db_table": "til",
            },
        ),
        migrations.CreateModel(
            name="UserFollow",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, db_index=True),
                ),
                (
                    "following_user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="follower",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="following",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_follow",
                "ordering": ["-date_created"],
                "unique_together": {("user_id", "following_user_id")},
            },
        ),
        migrations.CreateModel(
            name="Clap",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="clap id"
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="date created",
                    ),
                ),
                (
                    "til",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="wilt_backend.Til",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "clap",
                "verbose_name_plural": "claps",
                "db_table": "clap",
                "unique_together": {("user", "til")},
            },
        ),
        migrations.CreateModel(
            name="Bookmark",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="bookmark id"
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="date created",
                    ),
                ),
                (
                    "til",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="wilt_backend.Til",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "bookmark",
                "verbose_name_plural": "bookmarks",
                "db_table": "bookmark",
                "unique_together": {("user", "til")},
            },
        ),
    ]
